#!/usr/bin/env python3
"""
Main entry point for the backup project.
Loads configuration, runs backups, sends multi-channel notifications,
and optionally uploads backups remotely.
"""

import sys
from src.config import load_config, CONFIG
from src.backup import run_backups, should_upload
from src.notifications import notify_all
from src.remote_upload import upload_backups

def main():
    config = load_config()
    
    # Run backups and get summary.
    errors, summary = run_backups(config)
    if errors:
        message = "Databases with backup errors: " + ", ".join(errors)
    else:
        message = "All backups completed successfully."
    
    print(summary)
    print(message)
    
    # Send notifications through enabled channels.
    notify_all(config, message)
    
    # Remote upload if enabled and schedule condition is met.
    if config.has_section("remote") and config.getboolean("remote", "upload_enabled", fallback=False):
        upload_schedule = config.get("remote", "upload_schedule", fallback="daily")
        if should_upload(upload_schedule):
            remote_config = dict(config.items("remote"))
            print("Uploading backups to remote server...")
            upload_backups(remote_config)
        else:
            print("Remote upload schedule condition not met. Skipping remote upload.")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nBackup interrupted by user. Exiting gracefully...")
        sys.exit(1)
